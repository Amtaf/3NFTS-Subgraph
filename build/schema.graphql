type Account @entity {
  id: ID!
  address: Bytes!
}

type Collectible @entity {
  id: ID!
  collection: Collection!

  owner: Account!
  creator: Account!

  tokenId: BigInt!
  descriptorURI: String!

  #timestamps
  modified: BigInt
  created: BigInt
  removed: BigInt

  #Metadata
  name: String
  description: String

}

type Collection @entity {
  id: ID!
  collectionName: String!
  collectionSymbol: String! 
  collectionAddress: Bytes!
}
type ContractApproval @entity {
  id: ID!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
}

type ContractApprovalForAll @entity {
  id: ID!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
}

type ContractOwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}

type ContractTransfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}
